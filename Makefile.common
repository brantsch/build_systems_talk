LISTINGS := $(notdir ${LSTINPUT})
LISTINGS := $(addsuffix .tex,${LISTINGS})
LISTINGS := $(addprefix listings/,${LISTINGS})

# first target is default target: compile our document
all: ${DOC}.${TCTARGET}

${DOC}.${TCTARGET}: pygments_definitions.tex parts/*.tex ../build_systems.bib ${LISTINGS}

# macro defining how .tex files should be compiled
define compiletex
	${TC} $<
endef

.INTERMEDIATE: pygments_definitions.tex
pygments_definitions.tex: ;
	pygments -S ${PYGMENTS_STYLE} > $@

# pattern rule for compilation of .tex to target format
%.${TCTARGET}: %.tex %.bbl %.toc 
	${compiletex}

%.bbl %.blg: %.aux
	bibtex $<

listings: ;
	mkdir listings

# macro for highlighting of Makefile source code
define highlightmakefile
	pygmentize -l make -f latex -o listings/$(notdir ${1}).tex ${1};
endef

${LISTINGS}: ${LSTINPUT} 
	$(foreach SRCFILE,$?,$(call highlightmakefile,${SRCFILE}))


# pattern rule for generation of .toc files
%.aux: %.tex
	${compiletex}

%.toc: %.tex
	${compiletex}

# this would prevent make from deleting intermediate files, but I've had to
# comment it out, because the files in question are:
# 	* dependencies of the final document
# 	* generated by LaTeX in _every_ run.
# Thus, the document would be rebuilt unnecessarily often if these intermediate
# files were preserved.
#
#.SECONDARY: ; 

# auxiliary targets
.PHONY: clean squeaky_clean view edit

clean:
	-rm -f ${EXPENDABLES}

squeaky_clean: EXPENDABLES+=${DOC}.${TCTARGET}
squeaky_clean: clean

view: ${DOC}.${TCTARGET}
	${VIEWER} $< &

edit:
	gvim -p ${DOC}.tex parts/*.tex Makefile
